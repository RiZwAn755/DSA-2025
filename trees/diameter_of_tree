// find the diameter of tree .
// diameter in a tree means longest distance between any two nodes , may or may not include the root

// naive Approach : for each node we will find max(leftheight + rightheight) 
// optiml approach modify the height fnction

// code :

// int height(TreeNode* root , int& maxi) 
//     {
//         if(root == nullptr)
//         {
//             return 0;
//         }

//         int lh =height(root -> left , maxi);
//         int rh = height(root -> right , maxi);

//         maxi = max( maxi , lh + rh);

//         return 1 + max(lh ,rh);


//     }

//     int diameterOfBinaryTree(TreeNode* root) 
//     {
//        int maxi = 0;
//       height(root , maxi);
//        return maxi;

//     }
// };